//
// Edit this file in the *perseus* repo!
// (All changes outside the perseus repo will be overwritten)
//

// Steal from webapp/stylesheets/shared-package/variables.less
@baseFontFamily:        "Helvetica Neue", Helvetica, Arial, sans-serif;

// Perseus-related variables
@clueColor: #007AFF;

// Layer variables
@zIndexScratchPad: 1;
@zIndexAboveScratchpad: @zIndexScratchPad + 1;
@zIndexInteractiveComponent: @zIndexAboveScratchpad + 1;
@zIndexCurrentlyDragging: @zIndexInteractiveComponent + 1;

#perseus {
    position: relative;
}

// .blank-background is used to prevent drawing under transparent widgets.
// drawing under transparent widgets is particularly annoying because if
// you lift up your pen and put it down again, you can't continue drawing,
// because you're now clicking on the widget. This is very
// counterintuitive, so we simply don't let you see anything you draw under
// a widget.
.blank-background {
    background-color: #FDFDFD;  // Keep in sync with KhanUtil._BACKGROUND
}
// There is no scratchpad in the answer_area, and it has a different color
// background, so just make it transparent
#answer_area .blank-background {
    background-color: transparent;
}

.above-scratchpad {
    position: relative;
    z-index: @zIndexAboveScratchpad;
}

// All graphie components placed above the scratchpad should have their
// background wiped out.
.graphie.above-scratchpad,
.graphie-container.above-scratchpad {
    .blank-background;
}

.interactive-component,
.interactive-component.above-scratchpad {
    position: relative;
    z-index: @zIndexInteractiveComponent;
}

&,  // and moar specificity...
#answercontent input[type=text],
#answercontent input[type=number],
.framework-perseus input[type=text],
.framework-perseus input[type=number] {
    &.perseus-input-size-normal,
    {
        width: 80px;
    }

    &.perseus-input-size-small {
        width: 40px;
    }
}

#examples > div > ul {
    // React and Perseus.Renderer add an extra layer each to what qtip expects
    list-style-type: disc;
}

.framework-perseus {
    #problemarea {
        input, button {
            .interactive-component
        }
    }

    div.paragraph {
        font-size: 14px;
        margin: 22px 0px;
    }

    .paragraph + ul {
        font-size: 14px;
        margin: -11px 0px 22px 0px;
        padding-left: 35px;
    }

    .paragraph + ul>li {
        list-style-type: disc;
    }

    table {
        font-size: 14px;  // to match <p>

        th, td {
            padding: 5px 10px;
            text-align: left;

            &[align=center] {
                text-align: center;
            }

            &[align=right] {
                text-align: right;
            }
        }

        th {
            border-bottom: 2px solid #ccc;
            font-weight: bold;
            padding-bottom: 2px;
        }

        tr:nth-child(odd) {
            // Doesn't work in IE8 :(
            td {
                background-color: #ededed;
            }
        }
    }

    // place on a div above the inputs
    .range-input {
        border: 1px solid #ccc;
        border-radius: 5px;
        display: inline-block;
        padding: 0px 5px;

        & > input {
            border: 0;
            display: inline;
            text-align: center;
            width: 30px;
        }

        & > span {
            color: #999;
            font-size: 14px;
        }
    }

    .number-input {
        border: 1px solid #ccc;
        border-radius: 5px;
        margin: 0; // override
        padding: 5px 0; // override
        text-align: center;
        width: 40px;

        &.invalid-input {
            background-color: #ffbaba;
            outline-color: red;
        }

        &.number-input-label {
            margin-left: 5px;
        }

        &.mini {
            width: 40px;
        }
        &.small {
            width: 60px;
        }
        &.normal {
            width: 80px;
        }
    }

    .validated-number-input {
        .number-input;
    }
}

/* Widget CSS */

//
// Dropdown
//

.perseus-widget-dropdown {
    .interactive-component;
}


//
// Radio
//

// Override the float: left on input[type=radio]s in the
// #answer_area from khan-exercise.css, because it breaks our
// margin-left: -20px positioning
.perseus-widget-radio,
#answer_area .perseus-widget-radio {
    li span.checkbox input[type=radio] {
        float: none;
    }
}

.perseus-widget-radio {
    div,
    div > p {
        /* TODO(alpert): Find a better way of doing inline renderers */
        display: inline;
    }

    div.instructions {
        display: block;
        font-size: 14px;
        margin-bottom: 5px;
    }

    li {
        padding: 7px 0;
        margin-left: 20px;

        label {
            display: block;
        }

        span.checkbox {
            .interactive-component;
            width: 20px;
            margin-left: -21px;
            margin-right: 0px;
        }

        .value {
            display: block;
            margin-left: 18px;
            min-height: 22px;
        }

        img {
            vertical-align: middle;
        }
    }

   .perseus-radio-clue {
        color: @clueColor;
        display: block;
    }

    .perseus-textarea-pair,
    .perseus-textarea-underlay {
        display: block;
    }
}

//
// Interactive graph
//

.perseus-widget-interactive-graph {
    padding: 25px 25px 0 0;
}

.graphie-container {
    position: relative;

    img {
        position: absolute;
    }
}

//
// Measurer
//

.perseus-widget-measurer {
    position: relative;
    img {
        position: absolute;
    }
}

.perseus-widget-measurer-url {
    width: 70%;
}

//
// Expression
//

.perseus-widget-expression {
    &,
    > .output,
    > .output > .tex,
    > .output > .placeholder {
        display: block;
    }
}

.perseus-widget-expression > input,
#answer_area .perseus-widget-expression > input {
    box-sizing: border-box;
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    direction: ltr;
    margin-bottom: 5px;
    max-width: 240px;
    width: 100%;
}

.perseus-widget-expression > .output > .tex {
    overflow-x: auto;
}

.perseus-widget-expression > .output > .placeholder {
    position: relative;
    height: 40px;
    overflow-y: hidden;
}

.perseus-widget-expression > .output > .placeholder  > .error {
    -webkit-border-radius: 10px;
    -moz-border-radius: 10px;
    border-radius: 10px;
    background: #f7f7f7;
    border: 1px solid #ddd;
    box-shadow: 2px 2px 5px rgba(0,0,0,0.5);
    color: #000;
    display: none;
    font-weight: normal;
    min-height: 22px;
    width: 168px;
    position: absolute;
    top: 0px;
    left: 40px;
    margin: auto;
}

.perseus-widget-expression > .output > .placeholder > .error > .buddy {
    background-image: url(/images/perseus/error-buddy.png);
    background-size: 100%;
    height: 36px;
    width: 40px;
    position: absolute;
    top: -3px;
    left: -42px;
}

.perseus-widget-expression > .output > .placeholder > .error > .message {
    font: 12px @baseFontFamily;
    line-height: 1.4em;
    margin: 0px 4px;
}

.framework-perseus table.non-markdown {
    tr:nth-child(odd) {
        td {
            background-color: transparent;
        }
    }

    th, td {
        border-width: 0;
    }
}

//
// Table of values
//

// Extra specifity is needed to counteract generic tables
.framework-perseus table.perseus-widget-table-of-values.non-markdown {
    text-align: left;
    margin: 20px auto 0;
    border-collapse: collapse;

    tr {
        height: 23px;
    }

    th, td {
        border: 2px solid black;
        border-width: 0 2px;

        &:first-child {
            border-left: 0;
        }

        &:last-child {
            border-right: 0;
        }
    }

    th {
        font-weight: normal;
        padding: 5px;
        width: 80px;
        text-align: left;
        border-bottom: 2px solid black;
        .paragraph {
            margin: 0;
        }
    }

    td {
        padding: 0px 5px;
        text-align: right;
    }

    tbody tr:first-child td {
        padding-top: 5px;
    }
}
.framework-perseus table.perseus-widget-table-of-values input,
#answer_area table.perseus-widget-table-of-values input {
    width: 80px;
}

.draggy-boxy-thing-hover (@color: #ffa500) {
    border-color: @color;
    @darker: darken(@color, 11%);
    box-shadow: 0 0 4px @darker;
    -moz-box-shadow: 0 0 4px @darker;
    -ms-box-shadow: 0 0 4px @darker;
    -o-box-shadow: 0 0 4px @darker;
    -webkit-box-shadow: 0 0 4px @darker;
}

.draggy-boxy-thing {
    .draggable-box,
    .cards-area {
        background: #eee;
        border: 1px solid #ccc;
        border-bottom: 1px solid #aaa;

        box-shadow: 0 1px 2px #ccc;
        -moz-box-shadow: 0 1px 2px #ccc;
        -webkit-box-shadow: 0 1px 2px #ccc;
    }

    // TODO(jack): Make this work for the orderer too.
    // Right now don't do this for the orderer because it uses
    // more complicated positioning that this would break
    .cards-area {
        .above-scratchpad;
    }

    .card {
        .interactive-component;

        background-color: #fff;
        border: 1px solid #b9b9b9;
        border-bottom-color: #939393;
        border-radius: 4px;
        -moz-border-radius: 4px;
        -webkit-border-radius: 4px;
        -webkit-user-select: none;
        -khtml-user-select: none;
        -moz-user-select: none;
        -o-user-select: none;
        cursor: pointer;

        &.placeholder {
            background:#ddd;
            border: 1px solid #ccc;
        }

        &.drag-hint {
            background: none;
            border: 1px dashed #aaa;
            cursor: auto;

            &:hover {
                border-color: #aaa;
                box-shadow: none;
            }
        }

        &.dragging {
            background-color: #ffedcd;
            opacity: 0.8;
            filter: opacity(0.8);
        }

        &.stack {
            z-index: auto;
            &:after {
                content: " ";
                background-color: #fff;
                border: 1px solid #b9b9b9;
                border-bottom-color: #939393;
                border-radius: 4px;
                -moz-border-radius: 4px;
                -webkit-border-radius: 4px;
                height: 100%;
                width: 100%;
                z-index: -1;
                top: 1px;
                left: 1px;
                position: absolute;
            }
        }

        &:hover {
            .draggy-boxy-thing-hover();
        }
    }
}

.orderer {
    position: relative;

    .draggable-box {
        padding: 13px;
        min-height: 69px;
        margin-top: 30px;
    }

    .card {
        padding: 0 10px;
        cursor: pointer;
        position: relative;
        user-select: none;
        width: auto;

        img {
            vertical-align: middle;
        }
    }

    &.height-normal.layout-horizontal .card {
        line-height: 65px;
        height: 65px;
    }

    &.height-normal.layout-vertical .card {
        padding: 5px;
    }

    &.height-large .card {
        // TODO(alex): remove after checking that no items use this option
        line-height: 160px;
        height: 160px;
    }

    &.height-auto .card {
        padding: 0;
    }

    &.height-auto.layout-horizontal .drag-hint {
        min-height: 65px;
        min-width: 22px;
    }

    .card-wrap {
        .interactive-component;
        margin-right: 4px;
        width: auto;
        float: left;
    }

    .bank {
        margin: 0px 13px;

        .card-wrap {
            margin-right: 10px;
            margin-bottom: 8px;
        }
    }

    div.paragraph {
        margin: 0;
    }

    &.layout-vertical .card-wrap {
        float: none;
        text-align: center;
    }

    &.layout-vertical .bank,  &.layout-vertical .draggable-box {
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        float: left;
        max-width: 50%;
    }

    &.layout-vertical .bank {
        padding: 10px 0 0 0;
        margin: 0;

        .card-wrap {
            margin-right: 20px;
        }
    }

    &.layout-vertical .draggable-box {
        margin-top: 0;
        min-height: 170px;
        padding: 10px;

        .card-wrap:first-child {
            margin: 0;
        }

        .card-wrap {
            margin: 8px 0 0 0;
        }

        .drag-hint {
            box-sizing: border-box;
            min-width: 140px;
            min-height: 34px;
        }

        .placeholder {
            box-sizing: border-box;
        }
    }
}

.categorization-container {
    @categoryWidth: 215px;

    position: relative;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -o-user-select: none;
    user-select: none;

    .categories,
    .bank {
        float: left;
    }

    .categories {
        width: (@categoryWidth + 16px);
    }

    .cards-list {
        padding: 13px;
    }

    .category {
        float: left;
        padding: 8px;
        width: @categoryWidth;
        text-align: center;

        .card-container {
            float: left;
            width: 100%;
            display: block;
        }
        &.target .cards-list.cards-area {
            .draggy-boxy-thing-hover(#999);
        }
    }
    .header {
        font-weight: bold;
        margin-bottom: 5px;
    }
    .target .header {
        color: black;
    }
    .card {
        min-height: 26px;
        text-align: center;
        line-height: 24px;
        width: (@categoryWidth - 48px);
        padding: 6px 8px;
        margin: 0 auto;

        &:hover {
            transition-property: border-color, box-shadow;
            transition-duration: 150ms;
            -moz-transition-property: border-color, -moz-box-shadow;
            -moz-transition-duration: 150ms;
            -webkit-transition-property: border-color, -webkit-box-shadow;
            -webkit-transition-duration: 150ms;
        }
        transition-property: border-color, box-shadow;
        transition-duration: 150ms;
        -moz-transition-property: border-color, -moz-box-shadow;
        -moz-transition-duration: 150ms;
        -webkit-transition-property: border-color, -webkit-box-shadow;
        -webkit-transition-duration: 150ms;
    }

    .card-container {
        float: left;
        padding: 4px 0;
    }

    .card-hidden {
        visibility: hidden;
        z-index: 0;
    }

    .card.dragging {
        position: absolute;
        display: none;
        z-index: @zIndexCurrentlyDragging;
        .draggy-boxy-thing-hover();
    }

    .card.placeholder > * {
        visibility: hidden;
    }

    &.currently-dragging {
        .card {
            opacity: 0.4;
        }
        .card.dragging {
            display: block;
            background-color: white;
            opacity: 1;
            filter: opacity(1);
        }
    }

    div.paragraph {
        margin: 0;
    }
}


.perseus-widget-plotter {
    svg, vml {
        position: absolute;
    }
    span.rotate  {
        -moz-transform: rotate(-90deg);
        -o-transform: rotate(-90deg);
        -webkit-transform: rotate(-90deg);
        transform: rotate(-90deg);
        -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=3)";
    }
    body.ie span.rotate {
        left: 60px !important;
        top: 140px !important;
    }
}


.perseus-widget-transformer {
    .highlighted-tool-button {
        text-shadow: 1px 1px rgba(0, 0, 0, 0.25);
    }
    .graphie-container {
        margin-bottom: 10px;
    }
    .transformer-undo-button {
        float: right;
    }
    .perseus-transformation-list {
        input {
            width: 40px;
        }
        margin-top: 10px;
        margin-bottom: 10px;
    }
}


.perseus-sortable {
    // This should really be applied to individual items, but applying
    // it here makes positioning simple
    .interactive-component;

    box-sizing: border-box;
    -moz-box-sizing: border-box;
    float: left;

    .perseus-sortable-card {
        background-color: #fff;
        border: 1px solid #ddd;

        border-radius: 4px;
        -moz-border-radius: 4px;
        -webkit-border-radius: 4px;

        box-sizing: border-box;
        -moz-box-sizing: border-box;

        cursor: pointer;

        min-width: 25px;
        min-height: 44px;
        padding: 10px;

        -webkit-user-select: none;
        -khtml-user-select: none;
        -moz-user-select: none;
        -o-user-select: none;
    }

    .perseus-sortable-placeholder {
        background: #ddd;
        border: 1px solid #ccc;
    }

    .perseus-sortable-draggable {
        font-size: 0;
        text-align: center;

        &:before {
            // Vertical-align, part 1
            content: "";
            display: inline-block;
            height: 100%;
            vertical-align: middle;
        }

        & > div {
            // Vertical-align, part 2
            display: inline-block;
            font-size: 14px;
            max-width: 100%;
            vertical-align: middle;
        }

        div.paragraph {
            margin: 0;
        }

        &.perseus-sortable-static {
            cursor: pointer;
        }

        &.perseus-sortable-static:hover {
            .draggy-boxy-thing-hover();
        }

        &.perseus-sortable-dragging {
            background-color: #ffedcd;
            filter: opacity(0.8);
            opacity: 0.8;
        }

        &.perseus-sortable-disabled {
            background-color: inherit;
            border: 1px solid transparent;
            cursor: default;
        }
    }

    &.layout-horizontal {
        .perseus-sortable-card {
            float: left;
        }

        .perseus-sortable-dragging {
            cursor: ew-resize;
        }
    }

    &.layout-vertical {
        &, .perseus-sortable-card {
            max-width: 100%;
        }

        .perseus-sortable-dragging {
            cursor: ns-resize;
        }
    }

    &.unpadded {
        .perseus-sortable-card {
            line-height: 0;
            padding: 0;
        }
    }
}

.perseus-widget-matcher {
    @matcher-border: 1px solid #444;
    @matcher-padding: 5px;

    .column {
        float: left;
        max-width: 50%;

        &:first-child {
            .column-label, .perseus-sortable {
                padding-right: @matcher-padding;
            }
        }

        & + .column {
            .column-label, .perseus-sortable {
                border-left: @matcher-border;
                padding-left: @matcher-padding;
            }
        }
    }

    .column-label {
        border-bottom: @matcher-border;
        padding-bottom: @matcher-padding;
        text-align: center;

        div.paragraph {
            margin: 0;
        }
    }

    .perseus-sortable {
        padding-top: @matcher-padding;
    }
}

.perseus-diff {
    @borderColor: #E4E4E4;
    margin: 0 10px;

    .diff-header {
        font-size: 18px;
        padding: 10px 0;
        width: 50%;
        display: inline-block;
        &.collapsed {
            font-size: 14px;
            padding: 0px;
        }
    }

    .diff-body {
        border-top: 1px solid @borderColor;
        border-bottom: 1px solid @borderColor;
    }

    .diff-row {
        width: 50%;
        white-space: pre-wrap;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        font-size: 14px;
        padding-right: 20px;
        padding-left: 10px;
        overflow: hidden;
        &.collapsed {
            color: #888;
            cursor: pointer;
            &:hover {
                color: #666;
            }

            &:active {
                color: #444;
            }
        }

        .diff-line {
            margin-bottom: 20px;
        }
    }

    .before {
        float: left;
        border-left: 1px solid @borderColor;
    }

    .after {
        float: right;
        border-right: 1px solid @borderColor;
        border-left: 1px solid @borderColor;
    }

    .inner-value {
        height: 100%;
        padding: 3px;
    }

    .not-present {
        display: none;
    }

    .blank-space {
        visibility: hidden;
    }


    .added {
        background-color: #EEFFEE;
        &.dark {
            background-color: #AAFFAA;
        }
    }

    .removed {
        background-color: #FFEEEE;
        &.dark {
            background-color: #FFAAAA;
        }
    }
}

.perseus-indicator {
    &.wrapper {
        border-right: solid 5px;
        margin-bottom: 10px;
    }

    &.answered {
        border-color: gray;
        transition: all 0.25s;
    }

    &.unanswered {
        border-color: #FFA500;
    }
}
